--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - ODBC Generic Driver Driver.
--    Document    : C:\Documents and Settings\jboira\Escritorio\Modelo Datos_v1_0_2002.vsd.
--    Time Created: 07 de August de 2009 14:27.
--    Operation   : From Visio Generate Wizard.
--    Connected data source : No connection.
--    Connected server      : No connection.
--    Connected database    : Not applicable.

-- Create new table Planes_Carrera_Puestos.
-- Planes_Carrera_Puestos : Table of Planes_Carrera_Puestos
-- 	ID_Plan_Carrera : ID_Plan_Carrera identifica Planes_Carrera_Puestos
-- 	ID_Puesto : ID_Puesto identifica parcialmente Planes_Carrera_Puestos
-- 	Año_Cambio : Año_Cambio es de Planes_Carrera_Puestos
-- 	Descripcion : Descripcion es de Planes_Carrera_Puestos
-- 	Orden : Orden es de Planes_Carrera_Puestos  
create table Planes_Carrera_Puestos ( 
	ID_Plan_Carrera INTEGER not null,
	ID_Puesto INTEGER not null,
	Año_Cambio INTEGER not null,
	Descripcion VARCHAR(500) ,
	Orden INTEGER not null, constraint Planes_Carrera_Puestos_PK primary key (ID_Plan_Carrera, ID_Puesto) );  

-- Create new table Planes_Carrera.
-- Planes_Carrera : Table of Planes_Carrera
-- 	ID_Plan_Carrera : ID_Plan_Carrera identifica Planes_Carrera  
create table Planes_Carrera ( 
	ID_Plan_Carrera INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1), 
	Descripcion VARCHAR(500) ,
	constraint Planes_Carrera_PK primary key (ID_Plan_Carrera) );  

-- Create new table Itinerarios_Puestos.
-- Itinerarios_Puestos : Table of Itinerarios_Puestos
-- 	ID_Itinerario : ID_Itinerario identifica Itinerarios_Puestos
-- 	ID_Puesto : ID_Puesto identifica parcialmente Itinerarios_Puestos
-- 	Años : Años es de Itinerarios_Puestos
-- 	Descripcion : Descripcion es de Itinerarios_Puestos
-- 	Orden : Orden es de Itinerarios_Puestos  
create table Itinerarios_Puestos ( 
	ID_Itinerario INTEGER not null ,
	ID_Puesto INTEGER not null,
	Años DECIMAL(10,2) not null,
	Descripcion VARCHAR(255) ,
	Orden INTEGER not null, constraint Itinerarios_Puestos_PK primary key (ID_Itinerario, ID_Puesto) );  

-- Create new table Itinerarios.
-- Itinerarios : Table of Itinerarios
-- 	ID_Itinerario : ID_Itinerario identifica Itinerarios
-- 	Nombre : Nombre es de Itinerarios
-- 	Descripcion : Descripcion es de Itinerarios  
create table Itinerarios ( 
	ID_Itinerario INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	Nombre VARCHAR(50) not null,
	Descripcion VARCHAR(500) , constraint Itinerarios_PK primary key (ID_Itinerario) );  

-- Create new table Tipos_Evaluacion.
-- Tipo_Evaluacion : Table of Tipo_Evaluacion
-- 	ID_Tipo_Evaluacion : ID_Tipo_Evaluacion identifica Tipo_Evaluacion
-- 	Nombre_Tipo : Nombre_Tipo es de Tipo_Evaluacion  
create table Tipos_Evaluacion ( 
	ID_Tipo_Evaluacion INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	Nombre_Tipo VARCHAR(25) not null, constraint Tipo_Evaluacion_PK primary key (ID_Tipo_Evaluacion) );  

-- Create new table Conocimientos_UMAs.
-- Conocimientos_UMAs : Table of Conocimientos_UMAs
-- 	ID_UMA : ID_UMA identifica Conocimientos_UMAs
-- 	ID_Conocimiento : ID_Conocimiento identifica parcialmente Conocimientos_UMAs  
create table Conocimientos_UMAs ( 
	ID_UMA INTEGER not null,
	ID_Conocimiento INTEGER not null, constraint Conocimientos_UMAs_PK primary key (ID_UMA, ID_Conocimiento) );  

-- Create new table Familias_CNCP.
-- Familias_CNCP : Table of Familias_CNCP
-- 	ID_Familia_CNCP : ID_Familia_CNCP identifica Familias_CNCP
-- 	Descripcion : Descripcion es de Familias_CNCP  
create table Familias_CNCP ( 
	ID_Familia_CNCP INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 26, INCREMENT BY 1),
	Descripcion VARCHAR(50) not null, constraint Familias_CNCP_PK primary key (ID_Familia_CNCP) );  

-- Create new table Cualificaciones_CNCP_Unidades_Competencia_CNCP.
-- Cualificaciones_CNCP_Unidades_Competencia_CNCP : Table of Cualificaciones_CNCP_Unidades_Competencia_CNCP
-- 	ID_Cualificacion_CNCP : ID_Cualificacion_CNCP identifica Cualificaciones_CNCP_Unidades_Competencia_CNCP
-- 	ID_Unidad_Competencia : ID_Unidad_Competencia identifica parcialmente Cualificaciones_CNCP_Unidades_Competencia_CNCP  
create table Cualificaciones_CNCP_Unidades_Competencia_CNCP ( 
	ID_Cualificacion_CNCP INTEGER not null ,
	ID_Unidad_Competencia INTEGER not null, constraint Cualificaciones_CNCP_Unidades_Competencia_CNCP_PK primary key (ID_Cualificacion_CNCP, ID_Unidad_Competencia) );  

-- Create new table Ambitos.
-- Ambitos : Table of Ambitos
-- 	ID_Ambito : ID_Ambito identifica Ambitos
-- 	Nombre : Nombre es de Ambitos
-- 	ID_Area : ID_Area es de Ambitos  
create table Ambitos ( 
	ID_Ambito INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 63, INCREMENT BY 1),
	Nombre VARCHAR(80) not null,
	ID_Area INTEGER , constraint Ambitos_PK primary key (ID_Ambito) );  

-- Create new table Acreditacion_Titulaciones_Trabajador_Puesto.
-- Acreditacion_Titulaciones_Trabajador_Puesto : Table of Acreditacion_Titulaciones_Trabajador_Puesto
-- 	ID_Titulacion : ID_Titulacion identifica Acreditacion_Titulaciones_Trabajador_Puesto
-- 	ID_Puesto : ID_Puesto identifica parcialmente Acreditacion_Titulaciones_Trabajador_Puesto
-- 	ID_Trabajador : ID_Trabajador identifica parcialmente Acreditacion_Titulaciones_Trabajador_Puesto  
create table Acreditacion_Titulaciones_Trabajador_Puesto ( 
	ID_Titulacion INTEGER not null ,
	ID_Puesto INTEGER not null,
	ID_Trabajador INTEGER not null, constraint Acreditacion_Titulaciones_Trabajador_Puesto_PK primary key (ID_Titulacion, ID_Puesto, ID_Trabajador) );  

-- Create new table Titulaciones_Trabajador.
-- Titulaciones_Trabajador : Table of Titulaciones_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Titulaciones_Trabajador
-- 	ID_Titulacion : ID_Titulacion identifica parcialmente Titulaciones_Trabajador  
create table Titulaciones_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_Titulacion INTEGER not null, constraint Titulaciones_Trabajador_PK primary key (ID_Trabajador, ID_Titulacion) );  

-- Create new table Objetivos_Conocimientos_Trabajador.
-- Objetivos_Conocimientos_Trabajador : Table of Objetivos_Conocimientos_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Objetivos_Conocimientos_Trabajador
-- 	ID_Evaluacion : ID_Evaluacion identifica parcialmente Objetivos_Conocimientos_Trabajador
-- 	ID_CPET : ID_CPET identifica parcialmente Objetivos_Conocimientos_Trabajador
-- 	Valoracion_Objetivo_Conocimiento : Valoracion_Objetivo_Conocimiento es de Objetivos_Conocimientos_Trabajador  
create table Objetivos_Conocimientos_Trabajador ( 
	ID_Trabajador INTEGER not null ,
	ID_Evaluacion INTEGER not null,
	ID_CPET INTEGER not null,
	Valoracion_Objetivo_Conocimiento INTEGER not null, constraint Objetivos_Conocimientos_Trabajador_PK primary key (ID_Trabajador, ID_Evaluacion, ID_CPET) );  

-- Create new table Valoraciones_Conocimientos_Trabajador.
-- Valoraciones_Conocimientos_Trabajador : Table of Valoraciones_Conocimientos_Trabajador
-- 	ID_CPET : ID_CPET identifica parcialmente Valoraciones_Conocimientos_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Valoraciones_Conocimientos_Trabajador
-- 	ID_Evaluacion : ID_Evaluacion identifica parcialmente Valoraciones_Conocimientos_Trabajador
-- 	Valoracion_Conocimiento : Valoracion_Conocimiento es de Valoraciones_Conocimientos_Trabajador  
create table Valoraciones_Conocimientos_Trabajador ( 
	ID_CPET INTEGER not null,
	ID_Trabajador INTEGER not null,
	ID_Evaluacion INTEGER not null,
	Valoracion_Conocimiento INTEGER not null, constraint Valoraciones_Conocimientos_Trabajador_PK primary key (ID_Trabajador, ID_CPET, ID_Evaluacion) );  

-- Create new table Conocimientos_Puesto_Empresa_Tipologia.
-- Conocimientos_Puesto_Empresa_Tipologia : Table of Conocimientos_Puesto_Empresa_Tipologia
-- 	ID_CPET : ID_CPET identifica Conocimientos_Puesto_Empresa_Tipologia
-- 	ID_Puesto : ID_Puesto es de Conocimientos_Puesto_Empresa_Tipologia
-- 	ID_Empresa : ID_Empresa es de Conocimientos_Puesto_Empresa_Tipologia
-- 	ID_Tipologia_Conocimiento : ID_Tipologia_Conocimiento es de Conocimientos_Puesto_Empresa_Tipologia
-- 	ID_Conocimiento : ID_Conocimiento es de Conocimientos_Puesto_Empresa_Tipologia
-- 	Orden : Orden es de Conocimientos_Puesto_Empresa_Tipologia
-- 	Observaciones : Observaciones es de Conocimientos_Puesto_Empresa_Tipologia  
create table Conocimientos_Puesto_Empresa_Tipologia ( 
	ID_CPET INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1099, INCREMENT BY 1),
	ID_Puesto INTEGER,
	ID_Empresa INTEGER,
	ID_Tipologia_Conocimiento INTEGER not null,
	ID_Conocimiento INTEGER not null,
	Orden INTEGER,
    Excluyente SMALLINT,
    Valoracion_Requerida INTEGER,
	Observaciones VARCHAR(700) , constraint Conocimientos_Puesto_Empresa_Tipologia_PK primary key (ID_CPET) );  

-- Create new table Objetivos_Competencias_Trabajador.
-- Objetivos_Competencias_Trabajador : Table of Objetivos_Competencias_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Objetivos_Competencias_Trabajador
-- 	ID_CPET : ID_CPET identifica parcialmente Objetivos_Competencias_Trabajador
-- 	ID_Evaluacion : ID_Evaluacion identifica parcialmente Objetivos_Competencias_Trabajador
-- 	Valoracion_Objetivo_Competencia : Valoracion_Objetivo_Competencia es de Objetivos_Competencias_Trabajador  
create table Objetivos_Competencias_Trabajador ( 
	ID_Trabajador INTEGER not null ,
	ID_CPET INTEGER not null,
	ID_Evaluacion INTEGER not null,
	Valoracion_Objetivo_Competencia INTEGER not null, constraint Objetivos_Competencias_Trabajador_PK primary key (ID_Trabajador, ID_CPET, ID_Evaluacion) );  

-- Create new table Valoraciones_Competencias_Trabajador.
-- Valoraciones_Competencias_Trabajador : Table of Valoraciones_Competencias_Trabajador
-- 	ID_Evaluacion : ID_Evaluacion identifica parcialmente Valoraciones_Competencias_Trabajador
-- 	ID_CPET : ID_CPET identifica Valoraciones_Competencias_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica parcialmente Valoraciones_Competencias_Trabajador
-- 	Valoracion_Competencia : Valoracion_Competencia es de Valoraciones_Competencias_Trabajador  
create table Valoraciones_Competencias_Trabajador ( 
	ID_Evaluacion INTEGER not null ,
	ID_CPET INTEGER not null,
	ID_Trabajador INTEGER not null,
	Valoracion_Competencia INTEGER not null, constraint Valoraciones_Competencias_Trabajador_PK primary key (ID_CPET, ID_Trabajador, ID_Evaluacion) );  

-- Create new table Evaluacion.
-- Evaluacion : Table of Evaluacion
-- 	ID_Evaluacion : ID_Evaluacion identifica Evaluacion
-- 	Fecha : Fecha es de Evaluacion
-- 	ID_Tipo_Evaluacion : ID_Tipo_Evaluacion es de Evaluacion  
create table Evaluaciones ( 
	ID_Evaluacion INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	Fecha DATE not null,
	ID_Tipo_Evaluacion INTEGER, 
	ID_Trabajador INTEGER, 
	APP DECIMAL(10,2), 
	IDP DECIMAL(10,2),
	ACC DECIMAL(10,2), constraint Evaluacion_PK primary key (ID_Evaluacion) );  

-- Create new table Competencias_Puesto_Empresa_Tipologia.
-- Competencias_Puesto_Empresa_Tipologia : Table of Competencias_Puesto_Empresa_Tipologia
-- 	ID_CPET : ID_CPET identifica Competencias_Puesto_Empresa_Tipologia
-- 	ID_Empresa : ID_Empresa es de Competencias_Puesto_Empresa_Tipologia
-- 	ID_Puesto : ID_Puesto es de Competencias_Puesto_Empresa_Tipologia
-- 	ID_Competencia : ID_Competencia es de Competencias_Puesto_Empresa_Tipologia
-- 	ID_Tipologia_Competencia : ID_Tipologia_Competencia es de Competencias_Puesto_Empresa_Tipologia
-- 	Valoracion_Requerida : Valoracion_Requerida es de Competencias_Puesto_Empresa_Tipologia
-- 	Excluyente : Excluyente es de Competencias_Puesto_Empresa_Tipologia
-- 	Orden : Orden es de Competencias_Puesto_Empresa_Tipologia  
create table Competencias_Puesto_Empresa_Tipologia ( 
	ID_CPET INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1631, INCREMENT BY 1),
	ID_Empresa INTEGER ,
	ID_Puesto INTEGER ,
	ID_Competencia INTEGER not null,
	ID_Tipologia_Competencia INTEGER not null,
	Valoracion_Requerida INTEGER,
	Excluyente SMALLINT,
	Orden INTEGER , 
  Observaciones VARCHAR(700) , constraint Competencias_Puesto_Empresa_Tipologia_PK primary key (ID_CPET) );  

-- Create new table Trabajador.
-- Trabajador : Table of Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Trabajador
-- 	ID_Puesto : ID_Puesto es de Trabajador
-- 	Experiencia : Experiencia es de Trabajador
-- 	Observaciones : Observaciones es de Trabajador
-- 	ID_Plan_Carrera : ID_Plan_Carrera es de Trabajador  
create table Trabajadores ( 
	ID_Trabajador INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	Nombre_Alias VARCHAR(80) not null,
	ID_Puesto INTEGER not null,
	Experiencia INTEGER ,
	Observaciones VARCHAR(700) ,
	ID_Plan_Carrera INTEGER , constraint Trabajador_PK primary key (ID_Trabajador) );  

-- Create new table Informacion_Adicional_Puesto.
-- Informacion_Adicional_Puesto : Table of Informacion_Adicional_Puesto
-- 	ID_Puesto : ID_Puesto identifica Informacion_Adicional_Puesto
-- 	Experiencia_Requerida_Puesto_Similar : Experiencia_Requerida_Puesto_Similar es de Informacion_Adicional_Puesto
-- 	Experiencia_Deseada_Puesto_Similar : Experiencia_Deseada_Puesto_Similar es de Informacion_Adicional_Puesto
-- 	Funciones_Responsabilidades_Genericas : Funciones_Responsabilidades_Genericas es de Informacion_Adicional_Puesto
-- 	Medios_Tecnico_Materiales : Medios_Tecnico_Materiales es de Informacion_Adicional_Puesto
-- 	Condiciones_Laborales_Especiales : Condiciones_Laborales_Especiales es de Informacion_Adicional_Puesto
-- 	Subordinados_Directos : Subordinados_Directos es de Informacion_Adicional_Puesto
-- 	Subordinados_Indirectos : Subordinados_Indirectos es de Informacion_Adicional_Puesto
-- 	Magnitudes_Economicas : Magnitudes_Economicas es de Informacion_Adicional_Puesto
-- 	Otras_Magnitudes : Otras_Magnitudes es de Informacion_Adicional_Puesto
-- 	Relaciones_Internas : Relaciones_Internas es de Informacion_Adicional_Puesto
-- 	Relaciones_Externas : Relaciones_Externas es de Informacion_Adicional_Puesto
-- 	Tecnicos : Tecnicos es de Informacion_Adicional_Puesto
-- 	Gerenciales : Gerenciales es de Informacion_Adicional_Puesto
-- 	Humanos : Humanos es de Informacion_Adicional_Puesto
-- 	Plazos : Plazos es de Informacion_Adicional_Puesto
-- 	Peligrosidad : Peligrosidad es de Informacion_Adicional_Puesto
-- 	Otros : Otros es de Informacion_Adicional_Puesto
-- 	Toma_Decisiones : Toma_Decisiones es de Informacion_Adicional_Puesto
-- 	Emision_Propuestas : Emision_Propuestas es de Informacion_Adicional_Puesto
-- 	Instrucciones : Instrucciones es de Informacion_Adicional_Puesto
-- 	Normativa : Normativa es de Informacion_Adicional_Puesto
-- 	Politica_Empresa : Politica_Empresa es de Informacion_Adicional_Puesto
-- 	Decisiones : Decisiones es de Informacion_Adicional_Puesto
-- 	Propuestas : Propuestas es de Informacion_Adicional_Puesto  
create table Informacion_Adicional_Puestos ( 
	ID_Puesto INTEGER not null,
	Experiencia_Requerida_Puesto_Similar INTEGER  DEFAULT 0,
	Experiencia_Deseada_Puesto_Similar INTEGER  DEFAULT 0,
	Funciones_Responsabilidades_Genericas VARCHAR(2000) ,
	Medios_Tecnico_Materiales VARCHAR(255) ,
	Condiciones_Laborales_Especiales VARCHAR(255) ,
	Subordinados_Directos INTEGER ,
	Subordinados_Indirectos INTEGER ,
	Magnitudes_Economicas VARCHAR(255) ,
	Otras_Magnitudes VARCHAR(255) ,
	Relaciones_Internas INTEGER ,
	Relaciones_Externas INTEGER ,
	Tecnicos INTEGER ,
	Gerenciales INTEGER ,
	Humanos INTEGER ,
	Plazos INTEGER ,
	Peligrosidad INTEGER ,
	Otros INTEGER ,
	Toma_Decisiones SMALLINT ,
	Emision_Propuestas SMALLINT ,
	Instrucciones SMALLINT ,
	Normativa SMALLINT ,
	Politica_Empresa SMALLINT ,
	Decisiones INTEGER ,
	Propuestas INTEGER , constraint Informacion_Adicional_Puesto_PK primary key (ID_Puesto) );  

-- Create new table Unidades_Competencia_CNCP_Puesto.
-- Unidades_Competencia_CNCP_Puesto : Table of Unidades_Competencia_CNCP_Puesto
-- 	ID_Unidad_Competencia_CNCP : ID_Unidad_Competencia_CNCP identifica parcialmente Unidades_Competencia_CNCP_Puesto
-- 	ID_Puesto : ID_Puesto identifica Unidades_Competencia_CNCP_Puesto  
create table Unidades_Competencia_CNCP_Puesto ( 
	ID_Unidad_Competencia_CNCP INTEGER not null ,
	ID_Puesto INTEGER not null, 
	Excluyente SMALLINT DEFAULT 0,
	constraint Unidades_Competencia_CNCP_Puesto_PK primary key (ID_Puesto, ID_Unidad_Competencia_CNCP) );  

-- Create new table Unidades_Competencia_CNCP_UMAs.
-- Unidades_Competencia_CNCP_UMAs : Table of Unidades_Competencia_CNCP_UMAs
-- 	ID_UMA : ID_UMA identifica Unidades_Competencia_CNCP_UMAs
-- 	ID_Unidad_Competencia : ID_Unidad_Competencia identifica parcialmente Unidades_Competencia_CNCP_UMAs  
create table Unidades_Competencia_CNCP_UMAs ( 
	ID_UMA INTEGER not null,
	ID_Unidad_Competencia INTEGER not null, constraint Unidades_Competencia_CNCP_UMAs_PK primary key (ID_UMA, ID_Unidad_Competencia) );  

-- Create new table Unidades_Competencia_CNCP.
-- Unidades_Competencia_CNCP : Table of Unidades_Competencia_CNCP
-- 	ID_Unidad_Competencia_CNCP : ID_Unidad_Competencia_CNCP identifica Unidades_Competencia_CNCP
-- 	Descripcion : Descripcion es de Unidades_Competencia_CNCP
-- 	ID_Familia_Profesional : ID_Familia_Profesional es de Unidades_Competencia_CNCP
-- 	ID_Area : ID_Area es de Unidades_Competencia_CNCP
-- 	ID_Familia_CNCP : ID_Familia_CNCP es de Unidades_Competencia_CNCP
-- 	ID_FOCUM : ID_FOCUM es de Unidades_Competencia_CNCP  
create table Unidades_Competencia_CNCP ( 
	ID_Unidad_Competencia_CNCP INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1330, INCREMENT BY 1),
	Descripcion VARCHAR(700) not null,
	ID_Familia_Profesional INTEGER ,
	ID_Area INTEGER ,
	ID_Familia_CNCP INTEGER ,
	ID_FOCUM VARCHAR(10) , constraint Unidades_Competencia_CNCP_PK primary key (ID_Unidad_Competencia_CNCP) );  


-- Create new table Cualificaciones_Profesionales_CNCP.
-- Cualificaciones_Profesionales_CNCP : Table of Cualificaciones_Profesionales_CNCP
-- 	ID_Cualificacion_CNCP : ID_Cualificacion_CNCP identifica Cualificaciones_Profesionales_CNCP
-- 	Descripcion : Descripcion es de Cualificaciones_Profesionales_CNCP
-- 	ID_Familia_Profesional : ID_Familia_Profesional es de Cualificaciones_Profesionales_CNCP
-- 	ID_Familia_CNCP : ID_Familia_CNCP es de Cualificaciones_Profesionales_CNCP
-- 	ID_FOCUM : ID_FOCUM es de Cualificaciones_Profesionales_CNCP  
create table Cualificaciones_Profesionales_CNCP ( 
	ID_Cualificacion_CNCP INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 414, INCREMENT BY 1),
	Descripcion VARCHAR(700) not null,
	ID_Familia_CNCP INTEGER ,
	ID_FOCUM CHAR(8) , constraint Cualificaciones_Profesionales_CNCP_PK primary key (ID_Cualificacion_CNCP) );  

-- Create new table Titulaciones_Puesto.
-- Titulaciones_Puesto : Table of Titulaciones_Puesto
-- 	ID_Titulacion : ID_Titulacion identifica Titulaciones_Puesto
-- 	ID_Puesto : ID_Puesto identifica parcialmente Titulaciones_Puesto
-- 	Orden : Orden es de Titulaciones_Puesto
-- 	Excluyente : Excluyente es de Titulaciones_Puesto
-- 	Observaciones : Observaciones es de Titulaciones_Puesto  
create table Titulaciones_Puestos ( 
	ID_Titulacion INTEGER not null,
	ID_Puesto INTEGER not null,
	Orden INTEGER not null,
	Excluyente SMALLINT not null,
	Observaciones VARCHAR(700) , constraint Titulaciones_Puesto_PK primary key (ID_Titulacion, ID_Puesto) );  

-- Create new table Puestos_Conocimientos_Empresas.
-- Puestos_Conocimientos_Empresas : Table of Puestos_Conocimientos_Empresas
-- 	ID_Tipologia_Conocimiento : ID_Tipologia_Conocimiento partly identifies Puestos_Conocimientos_Empresas
-- 	ID_Puesto : ID_Puesto identifica Puestos_Conocimientos_Empresas
-- 	Orden : Orden es de Puestos_Conocimientos_Empresas  
create table Puestos_Conocimientos_Empresas ( 
	ID_Tipologia_Conocimiento INTEGER not null ,
	ID_Puesto INTEGER not null,
	Orden INTEGER , constraint Puestos_Conocimientos_Empresas_PK primary key (ID_Tipologia_Conocimiento, ID_Puesto) );  

-- Create new table Competencias_Conocimientos.
-- Competencias_Conocimientos : Table of Competencias_Conocimientos
-- 	ID_Tipologia_Conocimiento : ID_Tipologia_Conocimiento identifica Competencias_Conocimientos
-- 	ID_Conocimiento : ID_Conocimiento identifica parcialmente Competencias_Conocimientos
-- 	ID_Puesto : ID_Puesto identifica parcialmente Competencias_Conocimientos
-- 	Orden : Orden es de Competencias_Conocimientos
-- 	Excluyente : Excluyente es de Competencias_Conocimientos
-- 	Valoracion_Requerida : Valoracion_Requerida es de Competencias_Conocimientos  
create table Competencias_Conocimientos ( 
	ID_Tipologia_Conocimiento INTEGER not null,
	ID_Conocimiento INTEGER not null,
	ID_Puesto INTEGER not null,
	Orden INTEGER not null,
	Excluyente SMALLINT not null,
	Valoracion_Requerida INTEGER not null, constraint Competencias_Conocimientos_PK primary key (ID_Tipologia_Conocimiento, ID_Conocimiento, ID_Puesto) );  

-- Create new table Tipologias_Conocimientos.
-- Tipologias_Conocimientos : Table of Tipologias_Conocimientos
-- 	ID_Tipologia_Conocimiento : ID_Tipologia_Conocimiento identifica Tipologias_Conocimientos
-- 	Nombre : Nombre es de Tipologias_Conocimientos
-- 	Minimo_Instancias : Minimo_Instancias es de Tipologias_Conocimientos
-- 	Maximo_Instancias : Maximo_Instancias es de Tipologias_Conocimientos  
create table Tipologias_Conocimientos ( 
	ID_Tipologia_Conocimiento INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 4, INCREMENT BY 1),
	Nombre VARCHAR(25) not null,
	Minimo_Instancias INTEGER not null,
	Maximo_Instancias INTEGER not null, constraint Tipologias_Conocimientos_PK primary key (ID_Tipologia_Conocimiento) );  

-- Create new table Tipologias_Competencias.
-- Tipologias_Competencias : Table of Tipologias_Competencias
-- 	ID_Tipologia_Competencia : ID_Tipologia_Competencia identifica Tipologias_Competencias
-- 	Nombre : Nombre es de Tipologias_Competencias
-- 	Minimo_Instancias : Minimo_Instancias es de Tipologias_Competencias
-- 	Maximo_Instancias : Maximo_Instancias es de Tipologias_Competencias  
create table Tipologias_Competencias ( 
	ID_Tipologia_Competencia INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 5, INCREMENT BY 1),
	Nombre VARCHAR(25) not null,
	Minimo_Instancias INTEGER not null,
	Maximo_Instancias INTEGER not null, constraint Tipologias_Competencias_PK primary key (ID_Tipologia_Competencia) );  

-- Create new table Niveles_Puesto.
-- Niveles_Puesto : Table of Niveles_Puesto
-- 	ID_Nivel_Puesto : ID_Nivel_Puesto identifica Niveles_Puesto
-- 	Nombre : Nombre es de Niveles_Puesto  
create table Niveles_Puestos ( 
	ID_Nivel_Puesto INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 6, INCREMENT BY 1),
	Nombre VARCHAR(60) not null, constraint Niveles_Puesto_PK primary key (ID_Nivel_Puesto) );  

-- Create new table Puestos.
-- Puestos : Table of Puestos
-- 	ID_Puesto : ID_Puesto identifica Puestos
-- 	Titulo : Titulo es de Puestos
-- 	ID_Nivel_Puesto : ID_Nivel_Puesto es de Puestos
-- 	Mision : Mision es de Puestos
-- 	Observaciones : Observaciones es de Puestos
-- 	ID_Puesto_Dependiente : ID_Puesto_Dependiente es de Puestos
-- 	ID_Cualificacion_CNCP : ID_Cualificacion_CNCP es de Puestos
-- 	ID_Departamento : ID_Departamento es de Puestos
-- 	ID_FOCUM : ID_FOCUM es de Puestos  
create table Puestos ( 
	ID_Puesto INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 216, INCREMENT BY 1),
	Titulo VARCHAR(120) not null,
	ID_Nivel_Puesto INTEGER ,
	Mision VARCHAR(1975) ,
	Observaciones VARCHAR(700) ,
	ID_Puesto_Dependiente INTEGER ,
	ID_Cualificacion_CNCP INTEGER ,
	ID_Departamento INTEGER ,
	ID_FOCUM CHAR(4) ,
  ID_PlanDIFOR_1_0 CHAR(7) , constraint Puestos_PK primary key (ID_Puesto) );  

-- Create new table Empresas.
-- Empresas : Table of Empresas
-- 	ID_Empresa : ID_Empresa identifica Empresas
-- 	Nombre : Nombre es de Empresas
-- 	CIF : CIF es de Empresas
-- 	Actividad : Actividad es de Empresas
-- 	Domicilio : Domicilio es de Empresas
-- 	Localidad : Localidad es de Empresas
-- 	CP : CP es de Empresas
-- 	Telefono : Telefono es de Empresas
-- 	Fax : Fax es de Empresas
-- 	Web : Web es de Empresas
-- 	Email : Email es de Empresas
-- 	Observaciones : Observaciones es de Empresas  
create table Empresas ( 
	ID_Empresa INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	Nombre VARCHAR(75) not null,
	CIF CHAR(20) ,
	Actividad VARCHAR(100) ,
	Domicilio VARCHAR(75) ,
	Localidad VARCHAR(50) ,
	CP CHAR(5) ,
	Telefono VARCHAR(20) ,
	Fax VARCHAR(20) ,
	Web VARCHAR(50) ,
	Email VARCHAR(30) ,
	Observaciones VARCHAR(500) , constraint Empresas_PK primary key (ID_Empresa) );  

-- Create new table Departamentos.
-- Departamentos : Table of Departamentos
-- 	ID_Departamento : ID_Departamento identifica Departamentos
-- 	Nombre : Nombre es de Departamentos
-- 	Descripcion : Descripcion es de Departamentos
-- 	ID_Empresa : ID_Empresa es de Departamentos
-- 	ID_FOCUM : ID_FOCUM es de Departamentos  
create table Departamentos ( 
	ID_Departamento INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 18, INCREMENT BY 1) not null,
	Nombre VARCHAR(50) not null,
	Descripcion VARCHAR(500) ,
	Activo SMALLINT , 
	ID_Empresa INTEGER , constraint Departamentos_PK primary key (ID_Departamento) );  

-- Create new table Categorias_Titulaciones.
-- Categorias_Titulaciones : Table of Categorias_Titulaciones
-- 	ID_Categoria_Titulacion : ID_Categoria_Titulacion identifica Categorias_Titulaciones
-- 	Nombre : Nombre es de Categorias_Titulaciones    
  create table Categorias_Titulaciones ( 
	ID_Categoria_Titulacion INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 54, INCREMENT BY 1),
	Nombre VARCHAR(100) not null, constraint Categorias_Titulaciones_PK primary key (ID_Categoria_Titulacion) ); 

-- Create new table Titulaciones.
-- Titulaciones : Table of Titulaciones
-- 	ID_Titulacion : ID_Titulacion identifica Titulaciones
-- 	Nombre : Nombre es de Titulaciones
-- 	Descripcion : Descripcion es de Titulaciones
-- 	ID_Categoria_Titulacion : ID_Categoria_Titulacion es de Titulaciones  
create table Titulaciones ( 
	ID_Titulacion INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 835, INCREMENT BY 1), 
	Nombre VARCHAR(160) not null,
	Descripcion VARCHAR(255) ,
	ID_Categoria_Titulacion INTEGER , 
  ID_PlanDIFOR_1_0 CHAR(7), constraint Titulaciones_PK primary key (ID_Titulacion) );  

-- Create new table Unidades_Conocimiento.
-- Unidades_Conocimiento : Table of Unidades_Conocimiento
-- 	ID_Unidad_Conocimiento : ID_Unidad_Conocimiento identifica Unidades_Conocimiento
-- 	Nombre : Nombre es de Unidades_Conocimiento
-- 	ID_Ambito : ID_Ambito es de Unidades_Conocimiento  
create table Unidades_Conocimiento ( 
	ID_Unidad_Conocimiento INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 304, INCREMENT BY 1),
	Nombre VARCHAR(120) not null,
	ID_Ambito INTEGER , constraint Unidades_Conocimiento_PK primary key (ID_Unidad_Conocimiento) );  

-- Create new table UMAs.
-- UMAs : Table of UMAs
-- 	ID_UMA : ID_UMA identifica UMAs
-- 	Nombre : Nombre es de UMAs
-- 	Horas : Horas es de UMAs
-- 	Objetivos : Objetivos es de UMAs
-- 	ID_Unidad_Conocimiento : ID_Unidad_Conocimiento es de UMAs
-- 	ID_Competencia : ID_Competencia es de UMAs
-- 	"ID_FOCUM " : ID_FOCUM  es de UMAs  
create table UMAs ( 
	ID_UMA INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1821, INCREMENT BY 1),
	Nombre VARCHAR(160) not null,
	Horas DECIMAL(10,2) ,
	Objetivos VARCHAR(750) ,
	ID_Unidad_Conocimiento INTEGER ,
	ID_Competencia INTEGER ,
	ID_FOCUM CHAR(10) , constraint UMAs_PK primary key (ID_UMA) );  

-- Create new table Categorias_Conocimientos.
-- Categoria_Conocimientos : Table of Categoria_Conocimientos
-- 	ID_Categoria_Competencia : ID_Categoria_Competencia identifica Categoria_Conocimientos
-- 	Nombre : Nombre es de Categoria_Conocimientos  



create table Categorias_Conocimientos ( 
	ID_Categoria_Conocimiento INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 28, INCREMENT BY 1),
	Nombre VARCHAR(50) not null, constraint Categorias_Conocimientos_PK primary key (ID_Categoria_Conocimiento) );  

-- Create new table Areas_FOCUM.
-- Areas_FOCUM : Table of Areas_FOCUM
-- 	ID_Area : ID_Area identifica Areas_FOCUM
-- 	Nombre : Nombre es de Areas_FOCUM  
create table Areas_FOCUM ( 
	ID_Area INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 13, INCREMENT BY 1),
	Nombre VARCHAR(60) not null, constraint Areas_FOCUM_PK primary key (ID_Area) );  

-- Create new table Conocimientos.
-- Conocimientos : Table of Conocimientos
-- 	ID_Conocimiento : ID_Conocimiento identifica Conocimientos
-- 	Titulo : Titulo es de Conocimientos
-- 	Descripcion : Descripcion es de Conocimientos
-- 	ID_Categoria_Competencia : ID_Categoria_Competencia es de Conocimientos
-- 	ID_Area : ID_Area es de Conocimientos
-- 	ID_FOCUM : ID_FOCUM es de Conocimientos  
create table Conocimientos ( 
	ID_Conocimiento INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1127, INCREMENT BY 1),
	Titulo VARCHAR(120) not null,
	Descripcion VARCHAR(255) ,
	ID_Categoria_Conocimiento INTEGER ,
	ID_Area INTEGER ,
	ID_FOCUM CHAR(11) ,
  ID_PlanDIFOR_1_0 CHAR(7), constraint Conocimientos_PK primary key (ID_Conocimiento) );  

-- Create new table Categorias_Competencias.
-- Categorias_Competencias : Table of Categorias_Competencias
-- 	ID_Categoria_Competencia : ID_Categoria_Competencia identifica Categorias_Competencias
-- 	Nombre : Nombre es de Categorias_Competencias  
create table Categorias_Competencias ( 
	ID_Categoria_Competencia INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 9, INCREMENT BY 1),
	Nombre VARCHAR(30) not null, constraint Categorias_Competencias_PK primary key (ID_Categoria_Competencia) );  

-- Create new table Competencias.
-- Competencias : Table of Competencias
-- 	ID_Competencia : ID_Competencia identifica Competencias
-- 	Titulo : Titulo es de Competencias
-- 	Descripcion_General : Descripcion_General es de Competencias
-- 	ID_Categoria_Competencia : ID_Categoria_Competencia es de Competencias
-- 	ID_FOCUM : ID_FOCUM es de Competencias  
create table Competencias ( 
	ID_Competencia INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 58, INCREMENT BY 1),
	Titulo VARCHAR(50) not null,
  Descripcion_General VARCHAR(500) ,
	ID_Categoria_Competencia INTEGER ,
	ID_FOCUM CHAR(9) , 
  ID_PlanDIFOR_1_0 CHAR(7), constraint Competencias_PK primary key (ID_Competencia) );  

-- Create new table Categorias_Niveles.
-- Categorias_Niveles : Table of Categoria_Niveles
-- 	ID_Categoria_Nivel : ID_Categoria_Nivel identifica Categorias_Niveles
-- 	Nombre : Nombre es de Categorias_Niveles  
  create table Categorias_Niveles ( 
	ID_Categoria_Nivel INTEGER not null,
	Nombre VARCHAR(20) not null, constraint Categorias_Niveles_PK primary key (ID_Categoria_Nivel) ); 
  
-- Create new table Categorias_Niveles.
-- Categorias_Niveles : Table of Categoria_Niveles
-- 	ID_Categoria_Nivel : ID_Categoria_Nivel identifica Categorias_Niveles
-- 	Nombre : Nombre es de Categorias_Niveles  
  create table Niveles_Categorias ( 
	ID_Nivel_Categoria INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 12, INCREMENT BY 1),
	Nombre VARCHAR(25) not null, 
  Orden SMALLINT not null, 
  ID_Categoria_Nivel INTEGER not null, constraint Niveles_Categorias_PK primary key (ID_Nivel_Categoria) ); 
  
-- Create new table Competencias_Niveles.
-- Conocimientos_UMAs : Table of Conocimientos_UMAs
-- 	ID_Competencia : ID_Competencia identifica parcialmente Conocimientos_UMAs
-- 	ID_Nivel_Categoria : ID_Nivel_Categoria identifica parcialmente Conocimientos_UMAs 

create table Competencias_Niveles ( 
	ID_Competencia INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ID_Nivel_Categoria INTEGER not null,
  Descripcion VARCHAR(500), 
  constraint Competencias_Niveles_PK primary key (ID_Competencia, ID_Nivel_Categoria) );  

-- Create new table Competencias_Trabajador.
-- Competencias_Trabajador : Table of Competencias_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Competencias_Trabajador
-- 	ID_Titulacion : ID_Titulacion identifica parcialmente Competencias_Trabajador  
create table Competencias_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_Competencia INTEGER not null, constraint Competencias_Trabajador_PK primary key (ID_Trabajador, ID_Competencia) );  
  
-- Create new table Conocimientos_Trabajador.
-- Conocimientos_Trabajador : Table of Conocimientos_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Conocimientos_Trabajador
-- 	ID_Titulacion : ID_Titulacion identifica parcialmente Conocimientos_Trabajador  
create table Conocimientos_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_Conocimiento INTEGER not null, constraint Conocimientos_Trabajador_PK primary key (ID_Trabajador, ID_Conocimiento) );  
  

-- Create new table UMAs_Trabajador
-- Conocimientos_Trabajador : Table of UMAs_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica UMAs_Trabajador
-- 	ID_UMA : ID_UMA identifica parcialmente UMAs_Trabajador  
create table UMAs_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_UMA INTEGER not null, constraint UMA_Trabajador_PK primary key (ID_Trabajador, ID_UMA) );  
	
-- Create new table Titulaciones_Convalidadas_Trabajador
-- Conocimientos_Trabajador : Table of Titulaciones_Convalidadas_Trabajador
-- 	ID_Trabajador : ID_Trabajador identifica Titulaciones_Convalidadas_Trabajador
-- 	ID_Titulacion_Convalidada : ID_Titulacion_Convaliadad identifica parcialmente Titulaciones_Convalidadas_Trabajador  
create table Titulaciones_Convalidadas_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_Titulacion_Convalidada INTEGER not null, constraint Titulacion_Convalidada_Trabajador_PK primary key (ID_Trabajador, ID_Titulacion_Convalidada) ); 	

create table Unidades_Competencia_CNCP_Trabajador ( 
	ID_Trabajador INTEGER not null,
	ID_Unidad_Competencia_CNCP INTEGER not null, constraint Unidades_Competencia_CNCP_Trabajador_PK primary key (ID_Trabajador, ID_Unidad_Competencia_CNCP) ); 	

	
-- Create new table Roles.
create table Roles ( 
	ID_Rol INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 3, INCREMENT BY 1),
	Nombre VARCHAR(20) not null,   
   constraint Rol_PK primary key (ID_Rol) ); 

-- Create new table Usuarios.
create table Usuarios ( 
	ID_Usuario INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 2, INCREMENT BY 1),
	Login VARCHAR(20) not null, 
	PassWord VARCHAR(14) not null, 
	ID_Trabajador INTEGER ,
	ID_Rol INTEGER , 
   constraint Usuario_PK primary key (ID_Usuario) );

-- Create new table Glosario.
-- Glosario : Table of Glosario
-- 	ID_Termino : ID_Termino identifica Glosario  
create table Glosario ( 
	ID_Termino INTEGER not null GENERATED BY DEFAULT AS IDENTITY (START WITH 57, INCREMENT BY 1), 
  Letra CHAR(1) not null,
	Termino VARCHAR(100),
  Descripcion VARCHAR(1500),
	constraint Glosario_PK primary key (ID_Termino) );  
   
-- Add the remaining keys, constraints and indexes for the table Planes_Carrera_Puestos.
alter table Planes_Carrera_Puestos add constraint idx_orden_planes_carrera_puestos unique (
	ID_Plan_Carrera,
	ID_Puesto,
	Orden);  


-- Add the remaining keys, constraints and indexes for the table Itinerarios_Puestos.
alter table Itinerarios_Puestos add constraint idx_orden_itinerario_puesto unique (
	ID_Itinerario,
	ID_Puesto,
	Orden);  


-- Add the remaining keys, constraints and indexes for the table Itinerarios.
create unique index idx_nombre_itinerario on Itinerarios (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Tipo_Evaluacion.
alter table Tipos_Evaluacion add constraint idx_nombre_tipo_evaluacion unique (
	Nombre_Tipo);  


-- Add the remaining keys, constraints and indexes for the table Conocimientos_Puesto_Empresa_Tipologia.
alter table Conocimientos_Puesto_Empresa_Tipologia add constraint idx_orden_conocimientos_puesto_empresa_tipologia unique (
	ID_Conocimiento,
	ID_Empresa,
	ID_Puesto,
	Orden);  


-- Add the remaining keys, constraints and indexes for the table Competencias_Puesto_Empresa_Tipologia.
alter table Competencias_Puesto_Empresa_Tipologia add constraint idx_orden_competencias_puesto_empresa_tipologia unique (
	ID_Empresa,
	ID_Puesto,
	ID_Competencia,
	Orden);  


-- Add the remaining keys, constraints and indexes for the table Unidades_Competencia_CNCP.
create unique index idx_codigo_focum_unidades_competencias_cpcp on Unidades_Competencia_CNCP (
	ID_FOCUM);  


-- Add the remaining keys, constraints and indexes for the table Cualificaciones_Profesionales_CNCP.
create unique index idx_codigo_focum_cualificaciones_cpcp on Cualificaciones_Profesionales_CNCP (
	ID_FOCUM);  


-- Add the remaining keys, constraints and indexes for the table Titulaciones_Puesto.
alter table Titulaciones_Puestos add constraint idx_orden_titulacion_puesto unique (
	Orden,
	ID_Puesto,
	ID_Titulacion); 


-- Add the remaining keys, constraints and indexes for the table Tipologias_Conocimientos.
create unique index idx_nombre_tipologia_conocimiento on Tipologias_Conocimientos (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Tipologias_Competencias.
alter table Tipologias_Competencias add constraint idx_nombre_tipologia_competencia unique (
	Nombre);  


create index idx_codigo_focum_puesto on Puestos (
	ID_FOCUM);  


-- Add the remaining keys, constraints and indexes for the table Empresas.
create unique index idx_nombre_empresa on Empresas (
	Nombre);  

 
create unique index idx_CIF_empresa on Empresas (
	CIF);  


-- Add the remaining keys, constraints and indexes for the table Departamentos.
alter table Departamentos add constraint idx_nombre_departamento unique (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Categorias_Titulaciones.
create unique index idx_categoria_titulacion on Categorias_Titulaciones (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Titulaciones.
-- create unique index idx_nombre_titulacion on Titulaciones (
-- 	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Unidades_Conocimiento.
create unique index idx_unidad_conocimiento on Unidades_Conocimiento (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table UMAs.
create unique index idx_nombre_UMA on UMAs (
	Nombre);  


create index idx_codigo_focum_uma on UMAs (
	ID_FOCUM );  


-- Add the remaining keys, constraints and indexes for the table Categoria_Conocimientos.
create unique index idx_nombre_categoria_conocimiento on Categorias_Conocimientos (
	Nombre);  

-- Add the remaining keys, constraints and indexes for the table Categoria_Conocimientos.
create unique index idx_termino on Glosario (
	Letra,Termino);



alter table Categorias_Conocimientos add constraint idx_nombre_categoria_conocimiento unique (
	Nombre);  


create index idx_codigo_focum_conocimiento on Conocimientos (
	ID_FOCUM ASC);  


-- Add the remaining keys, constraints and indexes for the table Categorias_Competencias.
alter table Categorias_Competencias add constraint idx_nombre_categoria_competencia unique (
	Nombre);  


-- Add the remaining keys, constraints and indexes for the table Competencias.
alter table Competencias add constraint idx_titulo_competencias unique (
	Titulo);

-- Add the remaining keys, constraints and indexes for the table Competencias.
alter table Conocimientos add constraint idx_titulo_conocimientos_categoria unique (
	Titulo, ID_Categoria_Conocimiento);  	

-- Add the remaining keys, constraints and indexes for the table Puestos.	
alter table Puestos add constraint idx_titulo_departamento unique (
	Titulo, ID_Departamento);  

	
create index idx_codigo_focum_competencia on Competencias (
	ID_FOCUM ASC);  


-- Add foreign key constraints to table Planes_Carrera_Puestos.
alter table Planes_Carrera_Puestos
	add constraint Planes_Carrera_Planes_Carrera_Puestos_FK1 foreign key (
		ID_Plan_Carrera)
	 references Planes_Carrera (ID_Plan_Carrera)
	 on delete cascade;  

alter table Planes_Carrera_Puestos
	add constraint Puestos_Planes_Carrera_Puestos_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

-- Add foreign key constraints to table Itinerarios_Puestos.
alter table Itinerarios_Puestos
	add constraint Itinerarios_Itinerarios_Puestos_FK1 foreign key (
		ID_Itinerario)
	 references Itinerarios (ID_Itinerario) on delete cascade;  

alter table Itinerarios_Puestos
	add constraint Puestos_Itinerarios_Puestos_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

-- Add foreign key constraints to table Conocimientos_UMAs.
alter table Conocimientos_UMAs
	add constraint UMAs_Conocimientos_UMAs_FK1 foreign key (
		ID_UMA)
	 references UMAs (ID_UMA) on delete cascade;  

alter table Conocimientos_UMAs
	add constraint Conocimientos_Conocimientos_UMAs_FK1 foreign key (
		ID_Conocimiento)
	 references Conocimientos (ID_Conocimiento) on delete cascade;  

-- Add foreign key constraints to table Cualificaciones_CNCP_Unidades_Competencia_CNCP.
alter table Cualificaciones_CNCP_Unidades_Competencia_CNCP
	add constraint CP_CNCP_Cualificaciones_CNCP_UC_CNCP_FK1 foreign key (
		ID_Cualificacion_CNCP)
	 references Cualificaciones_Profesionales_CNCP (ID_Cualificacion_CNCP) on delete cascade;  

alter table Cualificaciones_CNCP_Unidades_Competencia_CNCP
	add constraint UC_CNCP_Cualificaciones_CNCP_UC_CNCP_FK1 foreign key (
		ID_Unidad_Competencia)
	 references Unidades_Competencia_CNCP (ID_Unidad_Competencia_CNCP) on delete cascade;  

-- Add foreign key constraints to table Ambitos.
alter table Ambitos
	add constraint Areas_FOCUM_Ambitos_FK1 foreign key (
		ID_Area)
	 references Areas_FOCUM (ID_Area) on delete cascade;  

-- Add foreign key constraints to table Acreditacion_Titulaciones_Trabajador_Puesto.
alter table Acreditacion_Titulaciones_Trabajador_Puesto
	add constraint TPA_Titulaciones_Trabajador_Puesto_FK1 foreign key (
		ID_Titulacion,
		ID_Puesto)
	 references Titulaciones_Puestos (ID_Titulacion,ID_Puesto) on delete cascade;  

alter table Acreditacion_Titulaciones_Trabajador_Puesto
	add constraint TTA_Titulaciones_Trabajador_Puesto_FK1 foreign key (
		ID_Trabajador,
		ID_Titulacion)
	 references Titulaciones_Trabajador (ID_Trabajador,ID_Titulacion) on delete cascade;  

-- Add foreign key constraints to table Titulaciones_Trabajador.
alter table Titulaciones_Trabajador
	add constraint Trabajador_Titulaciones_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Titulaciones_Trabajador
	add constraint Titulaciones_Titulaciones_Trabajador_FK1 foreign key (
		ID_Titulacion)
	 references Titulaciones (ID_Titulacion) on delete cascade;  

-- Add foreign key constraints to table Titulaciones_Trabajador.
alter table Competencias_Trabajador
	add constraint Trabajador_Competencias_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Competencias_Trabajador
	add constraint Competencia_Competencias_Trabajador_FK1 foreign key (
		ID_Competencia)
	 references Competencias (ID_Competencia) on delete cascade;  	 

-- Add foreign key constraints to table Conocimientos_Trabajador.
alter table Conocimientos_Trabajador
	add constraint Trabajador_Conocimientos_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Conocimientos_Trabajador
	add constraint Conocimientos_Conocimientos_Trabajador_FK1 foreign key (
		ID_Conocimiento)
	 references Conocimientos (ID_Conocimiento) on delete cascade;  

-- Add foreign key constraints to table UMAs_Trabajador.
alter table UMAs_Trabajador
	add constraint Trabajador_UMAs_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table UMAs_Trabajador
	add constraint UMAs_UMAs_Trabajador_FK1 foreign key (
		ID_UMA)
	 references UMAs (ID_UMA) on delete cascade;  

-- Add foreign key constraints to table Titulaciones_Convalidadas_Trabajador.
alter table Titulaciones_Convalidadas_Trabajador
	add constraint Trabajador_Titulacion_Convalidada_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Titulaciones_Convalidadas_Trabajador
	add constraint Titulacion_Convalidada_Trabajador_FK1 foreign key (
		ID_Titulacion_Convalidada)
	 references Titulaciones (ID_Titulacion) on delete cascade;  

-- Add foreign key constraints to table Titulaciones_Convalidadas_Trabajador.
alter table Unidades_Competencia_CNCP_Trabajador
	add constraint TRABAJADORES_UNIDADES_COMPETENCIA_CNCP_TRABAJADOR_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Unidades_Competencia_CNCP_Trabajador
	add constraint UNIDADES_COMPETENCIA_CNCP_UNIDADES_COMPETENCIA_CNCP_TRABAJADOR_FK1 foreign key (
		ID_Unidad_Competencia_CNCP)
	 references Unidades_Competencia_CNCP (ID_Unidad_Competencia_CNCP) on delete cascade; 

	 
-- Add foreign key constraints to table Objetivos_Conocimientos_Trabajador.
alter table Objetivos_Conocimientos_Trabajador
	add constraint Trabajador_Objetivos_Conocimientos_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Objetivos_Conocimientos_Trabajador
	add constraint Evaluacion_Objetivos_Conocimientos_Trabajador_FK1 foreign key (
		ID_Evaluacion)
	 references Evaluaciones (ID_Evaluacion) on delete cascade;  

alter table Objetivos_Conocimientos_Trabajador
	add constraint CPET_Objetivos_Conocimientos_Trabajador_FK1 foreign key (
		ID_CPET)
	 references Conocimientos_Puesto_Empresa_Tipologia (ID_CPET) on delete cascade;  

-- Add foreign key constraints to table Valoraciones_Conocimientos_Trabajador.
alter table Valoraciones_Conocimientos_Trabajador
	add constraint Trabajador_Valoraciones_Conocimientos_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

alter table Valoraciones_Conocimientos_Trabajador
	add constraint CPET_Valoraciones_Conocimientos_Trabajador_FK1 foreign key (
		ID_CPET)
	 references Conocimientos_Puesto_Empresa_Tipologia (ID_CPET) on delete cascade;  

alter table Valoraciones_Conocimientos_Trabajador
	add constraint Evaluacion_Valoraciones_Conocimientos_Trabajador_FK1 foreign key (
		ID_Evaluacion)
	 references Evaluaciones (ID_Evaluacion) on delete cascade;  

-- Add foreign key constraints to table Conocimientos_Puesto_Empresa_Tipologia.
alter table Conocimientos_Puesto_Empresa_Tipologia
	add constraint Puestos_Conocimientos_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

alter table Conocimientos_Puesto_Empresa_Tipologia
	add constraint Empresas_Conocimientos_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Empresa)
	 references Empresas (ID_Empresa) on delete cascade;  

alter table Conocimientos_Puesto_Empresa_Tipologia
	add constraint TCC_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Tipologia_Conocimiento)
	 references Tipologias_Conocimientos (ID_Tipologia_Conocimiento) on delete cascade;  

alter table Conocimientos_Puesto_Empresa_Tipologia
	add constraint Conocimientos_Conocimientos_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Conocimiento)
	 references Conocimientos (ID_Conocimiento) on delete cascade;  

-- Add foreign key constraints to table Objetivos_Competencias_Trabajador.
alter table Objetivos_Competencias_Trabajador
	add constraint Trabajador_Objetivos_Competencias_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (
		ID_Trabajador);  

alter table Objetivos_Competencias_Trabajador
	add constraint CPE_Tipologia_Objetivos_Competencias_Trabajador_FK1 foreign key (
		ID_CPET)
	 references Competencias_Puesto_Empresa_Tipologia (ID_CPET) on delete cascade;  

alter table Objetivos_Competencias_Trabajador
	add constraint Evaluacion_Objetivos_Competencias_Trabajador_FK1 foreign key (
		ID_Evaluacion)
	 references Evaluaciones(ID_Evaluacion) on delete cascade;  

-- Add foreign key constraints to table Valoraciones_Competencias_Trabajador.
alter table Valoraciones_Competencias_Trabajador
	add constraint Evaluacion_Valoraciones_Competencias_Trabajador_FK1 foreign key (
		ID_Evaluacion)
	 references Evaluaciones (ID_Evaluacion) on delete cascade;  

alter table Valoraciones_Competencias_Trabajador
	add constraint CPE_TVCT_FK1 foreign key (
		ID_CPET)
	 references Competencias_Puesto_Empresa_Tipologia (ID_CPET) on delete cascade;  

alter table Valoraciones_Competencias_Trabajador
	add constraint Trabajador_Valoraciones_Competencias_Trabajador_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

-- Add foreign key constraints to table Evaluaciones.
alter table Evaluaciones
	add constraint Tipo_Evaluacion_Evaluacion_FK1 foreign key (
		ID_Tipo_Evaluacion)
	 references Tipos_Evaluacion (ID_Tipo_Evaluacion) on delete cascade;  

-- Add foreign key constraints to table Evaluaciones.
alter table Evaluaciones
	add constraint Trabajador_Evaluacion_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade;  

-- Add foreign key constraints to table Competencias_Puesto_Empresa_Tipologia.
alter table Competencias_Puesto_Empresa_Tipologia
	add constraint Empresas_Competencias_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Empresa)
	 references Empresas (ID_Empresa) on delete cascade;  

alter table Competencias_Puesto_Empresa_Tipologia
	add constraint Puestos_Competencias_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

alter table Competencias_Puesto_Empresa_Tipologia
	add constraint Competencias_Competencias_Puesto_Empresa_Tipologia_FK1 foreign key (
		ID_Competencia)
	 references Competencias (ID_Competencia) on delete cascade;  

alter table Competencias_Puesto_Empresa_Tipologia
	add constraint Tipologias_Competencias_CPET_FK1 foreign key (
		ID_Tipologia_Competencia)
	 references Tipologias_Competencias (ID_Tipologia_Competencia) on delete cascade;  

-- Add foreign key constraints to table Trabajador.
alter table Trabajadores
	add constraint Puestos_Trabajador_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto);  

alter table Trabajadores
	add constraint Planes_Carrera_Trabajador_FK1 foreign key (
		ID_Plan_Carrera)
	 references Planes_Carrera (ID_Plan_Carrera) on delete set null;  

-- Add foreign key constraints to table Unidades_Competencia_CNCP_Puesto.
alter table Unidades_Competencia_CNCP_Puesto
	add constraint Unidades_Competencia_CNCP_Unidades_Competencia_CNCP_Puesto_FK1 foreign key (
		ID_Unidad_Competencia_CNCP)
	 references Unidades_Competencia_CNCP (ID_Unidad_Competencia_CNCP) on delete cascade;  

alter table Unidades_Competencia_CNCP_Puesto
	add constraint Puestos_Unidades_Competencia_CNCP_Puesto_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

-- Add foreign key constraints to table Unidades_Competencia_CNCP_UMAs.
alter table Unidades_Competencia_CNCP_UMAs
	add constraint UMAs_Unidades_Competencia_CNCP_UMAs_FK1 foreign key (
		ID_UMA)
	 references UMAs (ID_UMA) on delete cascade;  

alter table Unidades_Competencia_CNCP_UMAs
	add constraint Unidades_Competencia_CNCP_Unidades_Competencia_CNCP_UMAs_FK1 foreign key (
		ID_Unidad_Competencia)
	 references Unidades_Competencia_CNCP (ID_Unidad_Competencia_CNCP) on delete cascade;  


alter table Unidades_Competencia_CNCP
	add constraint Areas_FOCUM_Unidades_Competencia_CNCP_FK1 foreign key (
		ID_Area)
	 references Areas_FOCUM (ID_Area) on delete set null;  

alter table Unidades_Competencia_CNCP
	add constraint Familias_CNCP_Unidades_Competencia_CNCP_FK1 foreign key (
		ID_Familia_CNCP)
	 references Familias_CNCP (ID_Familia_CNCP) on delete cascade;  


alter table Cualificaciones_Profesionales_CNCP
	add constraint Familias_CNCP_Cualificaciones_Profesionales_CNCP_FK1 foreign key (
		ID_Familia_CNCP)
	 references Familias_CNCP (ID_Familia_CNCP) on delete cascade;

-- Add foreign key constraints to table Titulaciones_Puesto.
alter table Titulaciones_Puestos
	add constraint Titulaciones_Titulaciones_Puesto_FK1 foreign key (
		ID_Titulacion)
	 references Titulaciones (ID_Titulacion) on delete cascade;  

alter table Titulaciones_Puestos
	add constraint Puestos_Titulaciones_Puesto_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

-- Add foreign key constraints to table Puestos_Conocimientos_Empresas.
alter table Puestos_Conocimientos_Empresas
	add constraint Puestos_Puestos_Conocimientos_Empresas_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

alter table Puestos_Conocimientos_Empresas
	add constraint Tipologias_Conocimientos_Puestos_Conocimientos_Empresas_FK1 foreign key (
		ID_Tipologia_Conocimiento)
	 references Tipologias_Conocimientos (
		ID_Tipologia_Conocimiento);  

-- Add foreign key constraints to table Competencias_Conocimientos.
alter table Competencias_Conocimientos
	add constraint Tipologias_Conocimientos_Competencias_Conocimientos_FK1 foreign key (
		ID_Tipologia_Conocimiento)
	 references Tipologias_Conocimientos (
		ID_Tipologia_Conocimiento);  

alter table Competencias_Conocimientos
	add constraint Conocimientos_Competencias_Conocimientos_FK1 foreign key (
		ID_Conocimiento)
	 references Conocimientos (ID_Conocimiento) on delete cascade;  

alter table Competencias_Conocimientos
	add constraint Puestos_Competencias_Conocimientos_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  

-- Add foreign key constraints to table Puestos.
alter table Puestos
	add constraint Niveles_Puesto_Puestos_FK1 foreign key (
		ID_Nivel_Puesto)
	 references Niveles_Puestos (ID_Nivel_Puesto) on delete set null;  

alter table Puestos
	add constraint Puestos_Puestos_FK1 foreign key (
		ID_Puesto_Dependiente)
	 references Puestos (ID_Puesto) on delete set null;  

alter table Puestos
	add constraint Cualificaciones_Profesionales_CNCP_Puestos_FK1 foreign key (
		ID_Cualificacion_CNCP)
	 references Cualificaciones_Profesionales_CNCP (ID_Cualificacion_CNCP) on delete set null;  

alter table Puestos
	add constraint Departamentos_Puestos_FK1 foreign key (
		ID_Departamento)
	 references Departamentos (
		ID_Departamento);  

-- Add foreign key constraints to table Departamentos.
alter table Departamentos
	add constraint Empresas_Departamentos_FK1 foreign key (
		ID_Empresa)
	 references Empresas (
		ID_Empresa);  



-- Add foreign key constraints to table Titulaciones.
alter table Titulaciones
	add constraint Categorias_Titulaciones_FK1 foreign key (
		ID_Categoria_Titulacion)
	 references Categorias_Titulaciones (ID_Categoria_Titulacion) on delete cascade;  

-- Add foreign key constraints to table Unidades_Conocimiento.
alter table Unidades_Conocimiento
	add constraint Ambitos_Unidades_Conocimiento_FK1 foreign key (
		ID_Ambito)
	 references Ambitos (ID_Ambito) on delete cascade;  

-- Add foreign key constraints to table UMAs.
alter table UMAs
	add constraint Unidades_Conocimiento_UMAs_FK1 foreign key (
		ID_Unidad_Conocimiento)
	 references Unidades_Conocimiento (ID_Unidad_Conocimiento) on delete cascade;  

alter table UMAs
	add constraint Competencias_UMAs_FK1 foreign key (
		ID_Competencia)
	 references Competencias (ID_Competencia) on delete set null;  

-- Add foreign key constraints to table Conocimientos.
alter table Conocimientos
	add constraint Categorias_Conocimientos_Conocimientos_FK1 foreign key (
		ID_Categoria_Conocimiento)
	 references Categorias_Conocimientos (ID_Categoria_Conocimiento) on delete cascade;  

alter table Conocimientos
	add constraint Areas_FOCUM_Conocimientos_FK1 foreign key (
		ID_Area)
	 references Areas_FOCUM (ID_Area) on delete set null;  

-- Add foreign key constraints to table Competencias.
alter table Competencias
	add constraint Categorias_Competencias_Competencias_FK1 foreign key (
		ID_Categoria_Competencia)
	 references Categorias_Competencias (ID_Categoria_Competencia) on delete cascade;  


-- Add foreign key constraints to table Planes_Carrera_Puestos.
alter table Niveles_Categorias
	add constraint Niveles_Categorias_Categorias_Niveles_FK1 foreign key (
		ID_Categoria_Nivel)
	 references Categorias_Niveles (ID_Categoria_Nivel) on delete cascade;  

-- Add foreign key constraints to table Conocimientos_UMAs.
alter table Competencias_Niveles
	add constraint Competencias_Competencias_Niveles_FK1 foreign key (
		ID_Competencia)
	 references Competencias (ID_Competencia) on delete cascade;  


alter table Competencias_Niveles
	add constraint Niveles_Competencias_Niveles_FK1 foreign key (
		ID_Nivel_Categoria)
	 references Niveles_Categorias(ID_Nivel_Categoria) on delete cascade;  


alter table Informacion_Adicional_Puestos
	add constraint Informacion_Adicional_Puesto_FK1 foreign key (
		ID_Puesto)
	 references Puestos (ID_Puesto) on delete cascade;  
	
alter table Usuarios
	add constraint Usuarios_Trabajadores_FK1 foreign key (
		ID_Trabajador)
	 references Trabajadores (ID_Trabajador) on delete cascade; 
		
alter table Usuarios
	add constraint Usuarios_Roles_FK1 foreign key (
		ID_Rol)
	 references Roles (ID_Rol) on delete cascade; 
-- This is the end of the Microsoft Visual Studio generated SQL DDL script.

-- Vistas

-- Vista Empresa Organigrama
CREATE VIEW
    EMPRESA_ORGANIGRAMA ( EMPRESA, CIF, DOMICILIO, CP, LOCALIDAD, DEPARTAMENTO, PUESTO, TRABAJADOR, NIVEL, MISION, OBSERVACIONES, DEPENDIENTE, EXPERIENCIAREQUERIDA, EXPERIENCIA_DESEADA_PUESTO_SIMILAR, FUNCIONES_RESPONSABILIDADES_GENERICAS, MEDIOS_TECNICO_MATERIALES, CONDICIONES_LABORALES_ESPECIALES, SUBORDINADOS_DIRECTOS, SUBORDINADOS_INDIRECTOS, MAGNITUDES_ECONOMICAS, OTRAS_MAGNITUDES, RELACIONES_INTERNAS, RELACIONES_EXTERNAS, TECNICOS, GERENCIALES, HUMANOS, PLAZOS, PELIGROSIDAD, OTROS, TOMA_DECISIONES, EMISION_PROPUESTAS, INSTRUCCIONES, NORMATIVA, POLITICA_EMPRESA, DECISIONES, PROPUESTAS ) AS
    (
        SELECT
            plandifor_2.empresas.nombre                                                     AS empresa,
            plandifor_2.empresas.cif                                                        AS cif,
            plandifor_2.empresas.domicilio                                                  AS domicilio,
            plandifor_2.empresas.cp                                                         AS cp,
            plandifor_2.empresas.localidad                                                  AS localidad,
            plandifor_2.departamentos.nombre                                                AS departamento,
            plandifor_2.puestos.titulo                                                      AS puesto,
            plandifor_2.trabajadores.nombre_alias                                           AS trabajador,
            plandifor_2.niveles_puestos.nombre                                              AS nivel,
            plandifor_2.puestos.mision                                                      AS mision,
            plandifor_2.puestos.observaciones                                               AS observaciones,
            plandifor_2.puestos2.titulo                                                     AS dependiente,
            plandifor_2.informacion_adicional_puestos.EXPERIENCIA_REQUERIDA_PUESTO_SIMILAR  AS ExperienciaRequerida,
            plandifor_2.informacion_adicional_puestos.EXPERIENCIA_DESEADA_PUESTO_SIMILAR    AS EXPERIENCIA_DESEADA_PUESTO_SIMILAR,
            plandifor_2.informacion_adicional_puestos.FUNCIONES_RESPONSABILIDADES_GENERICAS AS FUNCIONES_RESPONSABILIDADES_GENERICAS,
            plandifor_2.informacion_adicional_puestos.MEDIOS_TECNICO_MATERIALES             AS MEDIOS_TECNICO_MATERIALES,
            plandifor_2.informacion_adicional_puestos.CONDICIONES_LABORALES_ESPECIALES      AS CONDICIONES_LABORALES_ESPECIALES,
            plandifor_2.informacion_adicional_puestos.SUBORDINADOS_DIRECTOS                 AS SUBORDINADOS_DIRECTOS,
            plandifor_2.informacion_adicional_puestos.SUBORDINADOS_INDIRECTOS               AS SUBORDINADOS_INDIRECTOS,
            plandifor_2.informacion_adicional_puestos.MAGNITUDES_ECONOMICAS                 AS MAGNITUDES_ECONOMICAS,
            plandifor_2.informacion_adicional_puestos.OTRAS_MAGNITUDES                      AS OTRAS_MAGNITUDES,
            plandifor_2.informacion_adicional_puestos.RELACIONES_INTERNAS                   AS RELACIONES_INTERNAS,
            plandifor_2.informacion_adicional_puestos.RELACIONES_EXTERNAS                   AS RELACIONES_EXTERNAS,
            plandifor_2.informacion_adicional_puestos.TECNICOS                              AS TECNICOS,
            plandifor_2.informacion_adicional_puestos.GERENCIALES                           AS GERENCIALES,
            plandifor_2.informacion_adicional_puestos.HUMANOS                               AS HUMANOS,
            plandifor_2.informacion_adicional_puestos.PLAZOS                                AS PLAZOS,
            plandifor_2.informacion_adicional_puestos.PELIGROSIDAD                          AS PELIGROSIDAD,
            plandifor_2.informacion_adicional_puestos.OTROS                                 AS OTROS,
            plandifor_2.informacion_adicional_puestos.TOMA_DECISIONES                       AS TOMA_DECISIONES,
            plandifor_2.informacion_adicional_puestos.EMISION_PROPUESTAS                    AS EMISION_PROPUESTAS,
            plandifor_2.informacion_adicional_puestos.INSTRUCCIONES                         AS INSTRUCCIONES,
            plandifor_2.informacion_adicional_puestos.NORMATIVA                             AS NORMATIVA,
            plandifor_2.informacion_adicional_puestos.POLITICA_EMPRESA                      AS POLITICA_EMPRESA,
            plandifor_2.informacion_adicional_puestos.DECISIONES                            AS DECISIONES,
            plandifor_2.informacion_adicional_puestos.PROPUESTAS                            AS PROPUESTAS
        FROM
            plandifor_2.empresas
        INNER JOIN plandifor_2.departamentos
        ON
            plandifor_2.departamentos.id_empresa=plandifor_2.empresas.id_empresa
        INNER JOIN plandifor_2.puestos
        ON
            plandifor_2.puestos.id_departamento=plandifor_2.departamentos.id_departamento
        INNER JOIN plandifor_2.trabajadores
        ON
            plandifor_2.trabajadores.id_puesto=plandifor_2.puestos.id_puesto
        INNER JOIN plandifor_2.niveles_puestos
        ON
            plandifor_2.puestos.id_nivel_puesto=plandifor_2.niveles_puestos.id_nivel_puesto
        LEFT JOIN plandifor_2.puestos AS puestos2
        ON
            plandifor_2.puestos2.id_puesto=plandifor_2.puestos.id_puesto_dependiente
        INNER JOIN plandifor_2.informacion_adicional_puestos
        ON
            plandifor_2.informacion_adicional_puestos.id_puesto=plandifor_2.puestos.id_puesto
    );

-- Vista EVALUACION_ACTIVA_TRABAJADOR
CREATE VIEW
    EVALUACION_ACTIVA_TRABAJADOR ( ID_TRABAJADOR, ID_EVALUACION ) AS
    (
        SELECT
            id_trabajador      AS id_trabajador,
            MAX(id_evaluacion) AS id_evaluacion
        FROM
            evaluaciones
        GROUP BY
            id_trabajador
    );

-- Vista UMAS_DE_TRABAJADOR
CREATE VIEW
    UMAS_DE_TRABAJADOR AS (
    (
        SELECT
            MAX(PLANDIFOR_2.EVALUACIONES.id_evaluacion) AS id_evaluacion,
            PLANDIFOR_2.EVALUACIONES.id_Trabajador      AS id_trabajador,
            PLANDIFOR_2.EVALUACIONES.app                AS app,
            PLANDIFOR_2.EVALUACIONES.idp                AS idp,
            PLANDIFOR_2.EVALUACIONES.acc                AS acc,
            plandifor_2.umas.id_uma                     AS id_uma
        FROM
        plandifor_2.EVALUACION_ACTIVA_TRABAJADOR
INNER JOIN
            PLANDIFOR_2.EVALUACIONES
ON PLANDIFOR_2.EVALUACIONES.ID_EVALUACION=plandifor_2.EVALUACION_ACTIVA_TRABAJADOR.ID_EVALUACION
        INNER JOIN plandifor_2.valoraciones_competencias_trabajador
        ON
            plandifor_2.valoraciones_competencias_trabajador.id_evaluacion=plandifor_2.evaluaciones.id_evaluacion
        INNER JOIN PLANDIFOR_2.competencias_puesto_empresa_tipologia
        ON
            PLANDIFOR_2.valoraciones_competencias_trabajador.id_cpet=PLANDIFOR_2.competencias_puesto_empresa_tipologia.id_cpet
        INNER JOIN PLANDIFOR_2.UMAS
        ON
            PLANDIFOR_2.competencias_puesto_empresa_tipologia.id_competencia=PLANDIFOR_2.umas.id_competencia
        WHERE
            PLANDIFOR_2.valoraciones_competencias_trabajador.valoracion_competencia<PLANDIFOR_2.competencias_puesto_empresa_tipologia.valoracion_requerida
            
        GROUP BY            
            PLANDIFOR_2.EVALUACIONES.id_trabajador,
            PLANDIFOR_2.EVALUACIONES.app,
            PLANDIFOR_2.EVALUACIONES.idp,
            PLANDIFOR_2.EVALUACIONES.acc,
            plandifor_2.umas.id_uma
    )
UNION
    (
        SELECT
            MAX(PLANDIFOR_2.EVALUACIONES.id_evaluacion) AS id_evaluacion,
            PLANDIFOR_2.EVALUACIONES.id_Trabajador      AS id_trabajador,
            PLANDIFOR_2.EVALUACIONES.app                AS app,
            PLANDIFOR_2.EVALUACIONES.idp                AS idp,
            PLANDIFOR_2.EVALUACIONES.acc                AS acc,
            plandifor_2.umas.id_uma                     AS id_uma
FROM
       plandifor_2.EVALUACION_ACTIVA_TRABAJADOR
INNER JOIN
            PLANDIFOR_2.EVALUACIONES
ON PLANDIFOR_2.EVALUACIONES.ID_EVALUACION=plandifor_2.EVALUACION_ACTIVA_TRABAJADOR.ID_EVALUACION
        INNER JOIN plandifor_2.valoraciones_conocimientos_trabajador
        ON
            plandifor_2.valoraciones_conocimientos_trabajador.id_evaluacion=plandifor_2.evaluaciones.id_evaluacion
        INNER JOIN PLANDIFOR_2.conocimientos_puesto_empresa_tipologia
        ON
            PLANDIFOR_2.valoraciones_conocimientos_trabajador.id_cpet=PLANDIFOR_2.conocimientos_puesto_empresa_tipologia.id_cpet
        INNER JOIN PLANDIFOR_2.conocimientos_umas
        ON
            PLANDIFOR_2.conocimientos_puesto_empresa_tipologia.id_conocimiento=PLANDIFOR_2.conocimientos_umas.id_conocimiento
        INNER JOIN PLANDIFOR_2.umas
        ON
            PLANDIFOR_2.conocimientos_umas.id_uma=PLANDIFOR_2.umas.id_uma
        WHERE
            PLANDIFOR_2.valoraciones_conocimientos_trabajador.valoracion_conocimiento<PLANDIFOR_2.conocimientos_puesto_empresa_tipologia.valoracion_requerida
        GROUP BY            
            PLANDIFOR_2.EVALUACIONES.id_trabajador,
            PLANDIFOR_2.EVALUACIONES.app,
            PLANDIFOR_2.EVALUACIONES.idp,
            PLANDIFOR_2.EVALUACIONES.acc,
            plandifor_2.umas.id_uma
    )
     );

-- Vista UMAS_NECESARIAS_TRABAJADOR	 
CREATE VIEW
    UMAS_NECESARIAS_TRABAJADOR ( ID_TRABAJADOR, ID_UMA, APP, IDP, ACC ) AS
    (
        SELECT
            UMAS_DE_TRABAJADOR.ID_TRABAJADOR AS ID_TRABAJADOR,
            UMAS_DE_TRABAJADOR.ID_UMA        AS ID_UMA,
            UMAS_DE_TRABAJADOR.APP           AS APP,
            UMAS_DE_TRABAJADOR.IDP           AS IDP,
            UMAS_DE_TRABAJADOR.ACC           AS ACC
        FROM
            UMAS_DE_TRABAJADOR
        LEFT JOIN UMAS_TRABAJADOR
        ON
            (
                UMAS_TRABAJADOR.ID_TRABAJADOR=UMAS_DE_TRABAJADOR.ID_TRABAJADOR
            AND UMAS_TRABAJADOR.ID_UMA=UMAS_DE_TRABAJADOR.ID_UMA
            )
        WHERE
            UMAS_TRABAJADOR.ID_UMA IS NULL
    );

-- Vista UMAS_NECESARIAS		
CREATE VIEW
    UMAS_NECESARIAS ( DEPARTAMENTO, AREAFOCUM, AMBITO, UNIDADCONOCIMIENTO, TRABAJADOR, TITULO, UMA, HORAS, ID, APP, IDP, ACC ) AS
    (
        SELECT
            departamentos.nombre         AS Departamento,
            areas_focum.nombre           AS AreaFocum,
            ambitos.nombre               AS Ambito,
            unidades_conocimiento.nombre AS UnidadConocimiento,
            trabajadores.nombre_alias    AS Trabajador,
            puestos.titulo,
            umas.nombre                    AS Uma,
            umas.horas                     AS horas,
            umas.id_uma                    AS id,
            UMAS_NECESARIAS_TRABAJADOR.APP AS APP,
            UMAS_NECESARIAS_TRABAJADOR.IDP AS IDP,
            UMAS_NECESARIAS_TRABAJADOR.ACC AS ACC
        FROM
            departamentos
        INNER JOIN puestos
        ON
            puestos.id_departamento=departamentos.id_departamento
        INNER JOIN trabajadores
        ON
            puestos.id_puesto=trabajadores.id_puesto
        INNER JOIN UMAS_NECESARIAS_TRABAJADOR
        ON
            UMAS_NECESARIAS_TRABAJADOR.id_trabajador=trabajadores.id_trabajador
        INNER JOIN umas
        ON
            UMAS_NECESARIAS_TRABAJADOR.id_uma=umas.id_uma
        INNER JOIN unidades_conocimiento
        ON
            umas.id_unidad_conocimiento=unidades_conocimiento.id_unidad_conocimiento
        INNER JOIN ambitos
        ON
            ambitos.id_ambito=unidades_conocimiento.id_ambito
        INNER JOIN areas_focum
        ON
            ambitos.id_area=areas_focum.id_area
    );